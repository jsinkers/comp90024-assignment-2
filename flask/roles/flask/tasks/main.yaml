---
- name: Log into DockerHub
  docker_login:
    username: sinkers
    password: '{{ dockerhub_password }}'
#- name: Pull docker image for flask app
#  community.docker.docker_image:
#    name: sinkers/comp90024-backend
#    source: pull
## see https://docs.ansible.com/ansible/2.5/modules/docker_container_module.html
#- name: Restart docker image for flask app
#  docker_container:
#    name: flask-gunicorn
#    image: sinkers/comp90024-backend
#    state: started
#    restart: yes
#    ports: 8000:8000

# https://docs.ansible.com/ansible/latest/collections/community/docker/docker_compose_module.html#ansible-collections-community-docker-docker-compose-module
- name: Tear down existing services
  community.docker.docker_compose:
    project_src: flask
    state: absent
- name: Create and start services
  community.docker.docker_compose:
    project_src: flask
  register: output
- ansible.builtin.debug:
    var: output
- name: Run `docker-compose up` again
  community.docker.docker_compose:
    project_src: flask
    build: no
  register: output
- ansible.builtin.debug:
    var: output
- ansible.builtin.assert:
    that: "not output.changed "
- name: Stop all services
  community.docker.docker_compose:
    project_src: flask
    build: no
    stopped: yes
  register: output
- ansible.builtin.debug:
    var: output
- ansible.builtin.assert:
    that:
      - "not flask.flask_flask_1.state.running"

- name: Restart services
  community.docker.docker_compose:
    project_src: flask
    build: no
    restarted: yes
  register: output
- ansible.builtin.debug:
    var: output
- ansible.builtin.assert:
    that:
      - "flask.flask_flask_1.state.running"